/*
*
*    NAME: mx-find-ip.slax
*    PURPOSE: Created for SouthCentral Team to combine the output of 
*             the "show bridge mac-table" command and the "show
*             arp" command.
*
*    CREATED: 08/28/09
*    BY: Jay Wilson (Solutions Architect - Western Area)
*    LAST MOD: 08/28/09
*    BY: Jay Wilson
*    VERSION: 1.00
*
*    MODIFICATION HISTORY:
*        V1.00 = Initial release
*
*/
version 1.0;
ns junos = "http://xml.juniper.net/junos/*/junos";
ns xnm = "http://xml.juniper.net/xnm/1.1/xnm";
ns jcs = "http://xml.juniper.net/junos/commit-scripts/1.0";
import "../import/junos.xsl";
var $arguments = {
    <argument> {
        <name> "ip";
        <description> "IP address you are searching for";
    }
    <argument> {
        <name> "z";
    }
}
param $ip;
param $z;


match / {
    <op-script-results> {
/*
*
*  RPC that returns the "show ethernet-switching table" output
*
*/
        var $rpc = <get-bridge-mac-table> {
        }
        var $switch-output = jcs:invoke($rpc);
/*
*
*  RPC that returns the "show arp" output
*
*/
    var $rpc2 = <get-arp-table-information> {
    }
    var $arp-output = jcs:invoke($rpc2);


        <output> jcs:printf("%-16s %-18s %-12s %5s  %4s  %-s\n","IP","MAC","Interface","Age","VID","VLAN");

/*
*
*   Process the arp table information.  If an specific,
*   IP was requested, only grab that ip.
*
*/
    if ($ip) {
       call write-it ($message = "ip specified");
       for-each ($arp-output/arp-table-entry) {
           if ($ip == ./ip-address) {
           call write-it ($message = "ip found");
           call mash-up ($arp-ip = ./ip-address, $arp-mac = ./mac-address, $yes-ip = $ip, $switch-output = $switch-output);
           }
       }
    }
    else {
       call write-it ($message = "no ip specified");
       for-each ($arp-output/arp-table-entry) {
           call mash-up ($arp-ip = ./ip-address, $arp-mac = ./mac-address, $yes-ip = $ip, $switch-output = $switch-output);
       }
    }
    }
}
/*
*   NAME: MASH-UP
*   PURPOSE: To combine the ethernet-switching-table-information output
*            with the arp-table-information output.
*   CALLED: Called for all interfaces that are returned by the RPC
*           to ethernet-switching-table-information and that match any
*           additional criteria, such IP
*
*   PARMS PASSED:
*        $arp-ip = the IP address on the current arp table record 
*        $arp-mac = the MAC address retrieved from the arp table
*        $yes-ip = the IP address the user is looking for
*        $switch-output = the structure that goes with the interface
*                         that was returned with the RPC 
*                         ethernet-switching-table-information.
*
*/
template mash-up($arp-ip, $arp-mac, $yes-ip, $switch-output) {

       for-each($switch-output/l2ald-rtb-macdb/l2ald-mac-entry) {
           if ($arp-mac == ./mac-address) {
               call write-it($message = "arp-found");
/*
*               call mash-vid($arp-ip = $arp-ip, $arp-mac = $arp-mac, $mac-interface = l2-mac-logical-interface, $mac-vlan = l2-bridge-vlan);
*/
                   <output> jcs:printf("%-16s %-18s %-12s %-s\n",$arp-ip,$arp-mac,l2-mac-logical-interface,l2-bridge-vlan);
           }
       }
}
/*
*   NAME: MASH-VID
*   PURPOSE: To combine the vlan information needed (vlan-id) with the
*            information already retrieved from 
*            ethernet-switching-table-information output and the
*            arp-table-information output.
*   CALLED: Called by MASH-UP after a match has been found between
*           ethernet-switching-table and the arp-table.
*
*   PARMS PASSED:
*        $arp-ip = the IP address on the current arp table record 
*        $arp-mac = the MAC address retrieved from the arp table
*        $mac-inteface = the inteface the found MAC address is attached to
*        $mac-age = the age timer for the MAC address
*        $mac-vlan = the vlan "name" the MAC address is a member of
*                    this is used to get the vlan-id
*        $vlans-output = the structure for all vlan information.
*                        this will be used to get the VID (vlan-id).
*
*/
template mash-vid($arp-ip, $arp-mac, $mac-interface, $mac-vlan) {
    for-each($vlans-output/vlan) {
        if ($mac-vlan == vlan-name) {
                   <output> jcs:printf("%-16s %-18s %-12s %5s  %4s  %-s\n",$arp-ip,$arp-mac,$mac-interface,$mac-age,vlan-tag,$mac-vlan);
        }
    }
} 
/*
*   NAME: WRITE-IT
*   PURPOSE: Writes a message to standard output that is passed to it.
*   CALLED: Can be called at any time from any where; however, the
*           "z" option must be set to a non-null value when the script
*           is invoked.
*
*   PARMS PASSED:
*        $message = The string to print out 
*
*/
template write-it($message) {
    if ($z) {
        <xnm:warning> {
            <message> {
                expr $message;
            }
        }
    }
}
