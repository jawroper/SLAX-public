/*
*
*    PURPOSE: Created as proof-of-concept for RMON event processing.
*
*    CREATED: 11/25/09
*    BY: Jay Wilson (Solutions Architect - Western Area)
*    LAST MOD: 11/25/09
*    BY: Jay Wilson
*    VERSION: 1.00
*
*    MODIFICATION HISTORY:
*        V1.00 = Initial release
*
*/
version 1.0;
ns junos = "http://xml.juniper.net/junos/*/junos";
ns xnm = "http://xml.juniper.net/xnm/1.1/xnm";
ns jcs = "http://xml.juniper.net/junos/commit-scripts/1.0";
import "../import/junos.xsl";
var $arguments = {
    <argument> {
        <name> "subtag";
        <description> "Syslog subtag";
    }
    <argument> {
        <name> "delimiter";
        <description> "Syslog delimiter";
    }
    <argument> {
        <name> "message";
        <description> "Syslog message";
    }
    <argument> {
        <name> "OIDname";
        <description> "OID name that is being tracked";
    }
    <argument> {
        <name> "debug";
        <description> "Any none blank character turns on debugging";
    }
}

/* 
*
*  Embedded the event policy to keep the configuration clean
*
*/

param $message;
param $subtag;
param $delimiter;
param $OIDname;
param $debug;
match / {
   <event-script-results> {
       if (contains($message,"rising threshold")) {
           if ($debug) {
              call debug ($type = "IF: ", $string = "In the IF");
              call debug ($type = "EVENT MESSAGE: ",$string = $message);
           }
           var $ifindex = { 
               call get-OIDindex ($message = $message);
           }
           var $value = {
               call get-value ($message = $message);
           }
           call process-message ($ifindex = $ifindex, $value = $value); 
       }
   }
}
/*
*   NAME: PROCESS-MESSAGE
*   PURPOSE: To act upon the information contained in the RMON message
*            that was generated
*   CALLED: Called after the relevant data has been obtained from the
*           message
*
*   PARMS PASSED:
*        $ifindex = the SNMP interface index number of the interface
*                   that caused the message to be generated
*        $value   = the value of the OID variable that caused the 
*                   message to be generated
*
*/
template process-message ($ifindex, $value) {
    var $msg2 = "RMON.SLAX: OID=" _ $OIDname _ " IFINDEX=" _ $ifindex _ " VALUE=" _ $value;
    expr jcs:syslog(5,$msg2);
}
/*
*   NAME: DEBUG
*   PURPOSE: Turns on detailed debugging of the script
*   CALLED: Called if the debug argument is set with a non-blank
*           character in the event policy.
*
*   PARMS PASSED:
*        $type   = what variable is being printed to syslog
*        $string = the value of the variable being printed to syslog
*
*/
template debug ($type, $string) {
    var $output = "RMON.SLAX: " _ $type _ $string;
    expr jcs:syslog(5,$output);
}
/*
*   NAME: GET-OIDINDEX
*   PURPOSE: To obtain the interface SNMP index number from the
*            message that was generated
*   CALLED: Called at the start of the script for
*
*   PARMS PASSED:
*        $message = the message generated by the RMON event
*
*/
template get-OIDindex ($message) {
    var $clip-a = substring-after($message,$OIDname);
    var $clip-b = substring-before($clip-a,", ");
    var $clip-c = substring-after($clip-b,".");
    if ($debug) {
        call debug ($type = "IF-CLIP-A: ", $string = $clip-a);
        call debug ($type = "IF-CLIP-B: ", $string = $clip-b);
        call debug ($type = "IF-CLIP-C: ", $string = $clip-c);
    } 
    expr $clip-c;
}
/*
*   NAME: GET-VALUE
*   PURPOSE: To obtain the "value" of the OID variable from the
*            message that was generated
*   CALLED: Called at the start of the script for
*
*   PARMS PASSED:
*        $message = the message generated by the RMON event
*
*/
template get-value ($message) {
    var $clip-a = substring-after($message,"value: ");
    var $clip-b = substring-before($clip-a,")");
    if ($debug) {
        call debug ($type = "VALUE-CLIP-A: ", $string = $clip-a);
        call debug ($type = "VALUE-CLIP-B: ", $string = $clip-b);
    } 
    expr $clip-b;
}
