/*
*
*    NAME: eric-srx.slax
*    PURPOSE: Created for ? to disable/enable interfaces
*             on an SRX based on specific events occurring.
*
*
*    CREATED: 05/23/13
*    BY: Jay Wilson (Sr Con Eng -- AT DC AMER)
*    LAST MOD: 12/05/13
*    BY: Jay Wilson
*    VERSION: 1.10
*
*    MODIFICATION HISTORY:
*        V1.00 = Initial release
*        V1.10 = Added ports to the disable/enable functions
*                Added parm to pass in the DEBUG syslog level
*                Changed [Debug] to [DEBUG]
*
*/
version 1.0;
ns junos = "http://xml.juniper.net/junos/*/junos";
ns xnm = "http://xml.juniper.net/xnm/1.1/xnm";
ns jcs = "http://xml.juniper.net/junos/commit-scripts/1.0";
import "../import/junos.xsl";
/*
*
*  Define the argument that will be passed into the script
*  when specific events trigger.
*
*/
var $arguments = {
        <argument> {
            <name> "test";
            <description> "Run in test mode";
        }
        <argument> {
            <name> "debug";
            <description> "Turn on debugging";
        }
        <argument> {
            <name> "dlevel";
            <description> "What level to write info messages into syslog at";
        }
        <argument> {
            <name> "action";
            <description> "Action to take (disable | enable)";
        }
}
param $test;
param $debug;
param $dlevel;
param $action;

var $con = jcs:open();

match / {
    <event-script-results> {
        var $event = {
            if (contains(event-script-input/trigger-event/id,"trap7") ||
                contains(event-script-input/trigger-event/id,"TRAP7")) {
                    expr event-script-input/trigger-event/id _ " : " _ event-script-input/trigger-event/attribute-list/attribute[name=="jnxFruName"]/value;
            }
            else if (contains(event-script-input/trigger-event/id,"trap6") ||
                contains(event-script-input/trigger-event/id,"TRAP6")) {
                    expr event-script-input/trigger-event/id _ " : " _ event-script-input/trigger-event/attribute-list/attribute[name=="jnxContentsDescr"]/value;
            }
            else {
                expr event-script-input/trigger-event/id;
            }
        }
	var $syslog-level = {
		if ($dlevel) {
			expr $dlevel;
		}
		else {
			expr "user.info";
		}
	}
        if ($debug) {
            var $msg1 = "event = " _ $event;
            expr jcs:syslog($syslog-level, "eric-srx.slax[DEBUG]: ", $msg1);
        }
        if ($action == "disable") {
            call disable;
        }
        else if ($action == "enable") {
            call enable;
        }
        else {
            expr jcs:syslog($syslog-level, "eric-srx.slax[DEBUG]: ", "Invalid action passed to the script");
        }
     }
     expr jcs:close($con);
}

/*
*   NAME: DISABLE
*   PURPOSE: Disables the interfaces
*   CALLED: Called if the event interface matches the RTG Interface
*
*   PARMS PASSED:
*
*/
template disable() {
/*
*
*   XML structure for disabling the INTERFACE
*
*/
        var $xml = {
            <configuration> {
                 <interfaces> {
                     <interface> {
                         <name> "ae0";
                         <disable>;
                     }
                     <interface> {
                         <name> "ae1";
                         <disable>;
                     }
                     <interface> {
                         <name> "xe-0/0/0";
                         <disable>;
                     }
                     <interface> {
                         <name> "xe-0/1/0";
                         <disable>;
                     }
                     <interface> {
                         <name> "xe-0/2/0";
                         <disable>;
                     }
                     <interface> {
                         <name> "xe-0/3/0";
                         <disable>;
                     }
                     <interface> {
                         <name> "xe-1/0/0";
                         <disable>;
                     }
                     <interface> {
                         <name> "xe-1/1/0";
                         <disable>;
                     }
                     <interface> {
                         <name> "xe-1/2/0";
                         <disable>;
                     }
                     <interface> {
                         <name> "xe-1/3/0";
                         <disable>;
                     }
                     <interface> {
                         <name> "xe-2/0/0";
                         <disable>;
                     }
                     <interface> {
                         <name> "xe-2/1/0";
                         <disable>;
                     }
                     <interface> {
                         <name> "xe-2/2/0";
                         <disable>;
                     }
                     <interface> {
                         <name> "xe-2/3/0";
                         <disable>;
                     }
                 }
            }
        }
        if ($debug) {
            expr jcs:syslog($syslog-level, "eric-srx[DEBUG]: ", "In DISABLE");
        }
/*
*
*   Use load-configuration template defined in junos.xsl to load and
*   commit the configuration
*
*/
        if ($test) {
           expr jcs:syslog($syslog-level, "eric-srx[TEST]: ", $xml);
        }
        else {
            var $results := {
                call jcs:load-configuration($connection = $con, $configuration = $xml);
            }
/*
*
*   Check the results and process them
*
*/
            for-each ($results//xnm:warning) {
                if (not(contains(message,"statement not found:"))) {
                    expr jcs:syslog("user.warning", "eric-srx.slax[Warning]: ", message);
                }
            }
            if ($results//xnm:error) {
                for-each ($results//xnm:error) {
                    expr jcs:syslog("user.error", "eric-srx.slax[Error]: ", message);
                }
            }
            else {
                expr jcs:syslog($syslog-level, "eric-srx.slax[Success]: ", "Successfully deactivated the interface");
            }
        }
}
/*
*   NAME: ENABLE
*   PURPOSE: Enables the interfaces
*   CALLED: Called if action = enable
*
*   PARMS PASSED:
*
*/
template enable() {
/*
*
*   XML structure for disabling the INTERFACE
*
*/
        var $xml = {
            <configuration> {
                 <interfaces> {
                     <interface> {
                         <name> "ae0";
                         <disable delete="delete">;
                     }
                     <interface> {
                         <name> "ae1";
                         <disable delete="delete">;
                     }
                     <interface> {
                         <name> "xe-0/0/0";
                         <disable delete="delete">;
                     }
                     <interface> {
                         <name> "xe-0/1/0";
                         <disable delete="delete">;
                     }
                     <interface> {
                         <name> "xe-0/2/0";
                         <disable delete="delete">;
                     }
                     <interface> {
                         <name> "xe-0/3/0";
                         <disable delete="delete">;
                     }
                     <interface> {
                         <name> "xe-1/0/0";
                         <disable delete="delete">;
                     }
                     <interface> {
                         <name> "xe-1/1/0";
                         <disable delete="delete">;
                     }
                     <interface> {
                         <name> "xe-1/2/0";
                         <disable delete="delete">;
                     }
                     <interface> {
                         <name> "xe-1/3/0";
                         <disable delete="delete">;
                     }
                     <interface> {
                         <name> "xe-2/0/0";
                         <disable delete="delete">;
                     }
                     <interface> {
                         <name> "xe-2/1/0";
                         <disable delete="delete">;
                     }
                     <interface> {
                         <name> "xe-2/2/0";
                         <disable delete="delete">;
                     }
                     <interface> {
                         <name> "xe-2/3/0";
                         <disable delete="delete">;
                     }
                 }
            }
        }
        if ($debug) {
            expr jcs:syslog($syslog-level, "eric-srx[DEBUG]: ", "In ENABLE");
        }
/*
*
*   Use load-configuration template defined in junos.xsl to load and
*   commit the configuration
*
*/
        if ($test) {
           expr jcs:syslog($syslog-level, "eric-srx[TEST]: ", $xml);
        }
        else {
            var $results := {
                call jcs:load-configuration($connection = $con, $configuration = $xml);
            }
/*
*
*   Check the results and process them
*
*/
            for-each ($results//xnm:warning) {
                if (not(contains(message,"statement not found:"))) {
                    expr jcs:syslog("user.warning", "eric-srx.slax[Warning]: ", message);
                }
            }
            if ($results//xnm:error) {
                for-each ($results//xnm:error) {
                    expr jcs:syslog("user.error", "eric-srx.slax[Error]: ", message);
                }
            }
            else {
                expr jcs:syslog($syslog-level, "eric-srx.slax[Success]: ", "Successfully activated the interface");
            }
        }
}
